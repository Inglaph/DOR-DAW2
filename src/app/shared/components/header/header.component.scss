@use 'stylesLap' as *;
@use 'sass:map';
@use 'sass:color';

$filter-shadow: drop-shadow(0 0 10px rgba(134, 167, 150, 0.6));

.header-container {
    @include responsive-container(0 auto,
        20px 50px,
        100%,
        map.get($container-layout, "max-width"),
        auto);
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: map.get($color-general, "header-background");
    border-radius: 20px;
    position: relative;
    z-index: 1000;

    .header-brand {
        a {
            font-size: 2.4rem;
            font-weight: 700;
            color: map.get($color-general, "light");
            text-decoration: none;
            transition: color 0.3s ease;

            &:hover {
                color: map.get($color-general, "primary");
            }
        }
    }

    .menu-toggle {
        display: none;
        background: none;
        border: none;
        cursor: pointer;
        padding: 10px;
        margin-left: auto;

        .menu-icon {
            width: 24px;
            height: 24px;
            color: map.get($color-general, "light");
            transition: transform 0.3s ease;
        }

        &.active .menu-icon {
            transform: rotate(90deg);
        }
    }

    ul {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        align-items: center;
        gap: 40px;
        padding: 0;
        margin: 0;
        list-style: none;
        transition: transform 0.3s ease;

        li {
            list-style: none;
            font-size: 1.8rem;
            font-weight: 500;
            letter-spacing: 0.1em;
            transition: all 0.3s ease;

            a {
                text-decoration: none;
                color: map.get($color-general, "light");
                transition: all 0.3s ease;
                display: block;
                padding: 1rem;

                &:hover {
                    color: map.get($color-general, "primary");
                    transform: scale(1.1);
                }
            }
        }
    }

    // Tablet styles
    @media (max-width: map.get($breakpoints-layout, "tablet")) {
        padding: 15px 30px;
        position: relative; // Cambiado de fixed a relative
        top: 0; // Eliminado el posicionamiento fijo
        left: 0;
        right: 0;
        margin: 20px auto; // Añadido margen para separación
        display: flex;
        flex-direction: row-reverse;

        .menu-toggle {
            display: block;
        }

        ul {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: linear-gradient(to bottom,
                    color.adjust(map.get($color-general, "dark"), $lightness: -10%),
                    color.adjust(map.get($color-general, "dark"), $lightness: -15%));
            flex-direction: column;
            gap: 0;
            padding: 20px;
            border-radius: 0 0 20px 20px;
            transform: translateY(-100%);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;

            &.active {
                transform: translateY(0);
                opacity: 1;
                visibility: visible;
                flex-direction: row-reverse;
            }

            li {
                width: 100%;
                text-align: center;
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);

                &:last-child {
                    border-bottom: none;
                }

                a {
                    padding: 15px;
                    width: 100%;

                    &:hover {
                        background: color.adjust(map.get($color-general, "dark"), $lightness: -8%);
                        transform: none;
                    }
                }
            }
        }
    }

    // Mobile styles using mixin
    @include movil {
        position: relative; // Cambiado de fixed a relative
        top: 0; // Eliminado el posicionamiento fijo
        left: 0;
        right: 0;
        margin: 20px auto; // Añadido margen para separación
        display: flex;
        flex-direction: column;
        margin-top: 10px;

        .header-brand a {
            font-size: 2rem;
        }

        ul {
            padding: 15px;
        }
    }
}

// Desktop styles - Solo aquí aplicamos el posicionamiento fijo
@media (min-width: map.get($breakpoints-layout, "desktop")) {
    .header-container {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        margin: 0;
        padding: 25px 60px;

        ul {
            gap: 60px;
        }
    }
}

// Extra large screens
@media (min-width: map.get($breakpoints-layout, "desktop-large")) {
    .header-container {
        padding: 30px 80px;

        ul {
            gap: 80px;
        }
    }
}

.logo-section {
    $radius: 30px;
    // outline: 0.5px solid rgb(255, 250, 250, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0px 25px;
    position: relative;
    transition: all 0.5s ease;
    background: map.get($color-gradient, "background"); // Fondo blanco semitransparente
    border-radius: $radius;
    filter: $filter-shadow; // Filtro de sombra

    // Efecto de hover
    &:hover {
        transform: scale(1.07);
        transition: all 0.5s ease;
        cursor: pointer;
        box-shadow: 0 0 8px rgba(37, 198, 102, 0.6);

        .logo-image {
            filter: drop-shadow(0 0 8px rgba(198, 195, 37, 0.6));
        }

        .logo-text {
            transition: all 0.5s ease;
            color: lighten(map.get($color-general, "primary"), 20%);
        }
    }
}

.logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    position: relative;

    // @include gradient-line(map.get($color-general, "primary"), map.get($color-general, "secondary"));
    &:hover::after {
        transform: scaleX(1);
    }
}

.logo-image {
    max-width: 150px;
    height: auto;
    transition: filter 0.3s ease; // Transición suave para el efecto de hover
    filter: drop-shadow(0 0 5px map.get($color-general, "primary")); // Sombra primaria
}

.logo-text {
    color: map.get($color-general, "light");
    font-size: 3rem;
    font-weight: bold;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7); // Sombra sutil para profundidad
}

.nav {
    // outline: 1px solid red;
    filter: $filter-shadow;
    display: flex;
}